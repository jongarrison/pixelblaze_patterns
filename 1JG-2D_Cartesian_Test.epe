{
  "name": "1JG-2D_Cartesian_Test",
  "id": "emfvZjuiLu9PJaNis",
  "sources": {
    "main": "export var xActive = 0 //to create a bar\nvar xActiveDelayCounter = 0\nvar xActiveDelay = 12 //how many renders before incrementing\nvar xStep = 0.11\nvar equalishTolerance = 0.02\n\nwidth = 10 //width of the 2D grid\nheight = 10 //height of the 2D grid\n// NOTE: setting step to 0.015 makes the walk shift\n// about one led per second. values larger than 1 can\n// cause leds to be skipped.\n\n\nexport function beforeRender(delta) {\n  //t1 = time(.01) // var used for rainbow colors\n\n  xActiveDelayCounter++\n  if (xActiveDelayCounter > xActiveDelay) {\n    xActiveDelayCounter = 0\n    xActive += xStep\n    \n    if (xActive >= 1) {\n      xActive = 0\n    }\n  }\n  \n}\n\nfunction equalish(val, target) {\n  return (val < (target + equalishTolerance) && val > (target - equalishTolerance))\n}\n\nvar bufLen0 = 10\nvar bufPos0 = 0\nexport var buffer0 = array(bufLen0)\n\nfunction setBuffer0(val) {\n  buffer0[bufPos0] = val\n  bufPos0++\n  if (bufPos0 >= bufLen0) {\n    bufPos0 = 0\n  }\n}\n\nvar bufLen1 = 10\nvar bufPos1 = 0\nexport var buffer1 = array(bufLen1)\n\nfunction setBuffer1(val) {\n  buffer1[bufPos1] = val\n  bufPos1++\n  if (bufPos1 >= bufLen1) {\n    bufPos1 = 0\n  }\n}\n\nvar cX = 0\nvar cY = 0\n\nexport function render2D(index, x, y) {\n    //hsv(x, 1, y+1)\n    cY = floor(index/width)   \n    \n    setBuffer0(x)\n    setBuffer1(cY)\n\n    if (equalish(x, xActive)) {\n      hsv(xActive, 1, 0.5)\n    } else {\n      hsv(0, 1, 0)\n    }\n    \n    if (equalish(y, xActive)) {\n      hsv(1, 1, 0.5)\n    }\n\n}\n"
  },
  "preview": ""
}